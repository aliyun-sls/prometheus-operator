// Copyright 2018 The prometheus-operator Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//	http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package v1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime"
)

const (
	SLSServiceMonitorsKind   = "SlsServiceMonitor"
	SLSServiceMonitorName    = "slsservicemonitors"
	SLSServiceMonitorKindKey = "slsservicemonitor"
)

// +genclient
// +k8s:openapi-gen=true
// +kubebuilder:resource:categories="prometheus-operator",shortName="smon"

// ServiceMonitor defines monitoring for a set of services.
type SLSServiceMonitor struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// Specification of desired Service selection for target discovery by
	// Prometheus.
	Spec ServiceMonitorSpec `json:"spec"`
}

// DeepCopyObject implements the runtime.Object interface.
func (l *SLSServiceMonitor) DeepCopyObject() runtime.Object {
	return l.DeepCopy()
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLSServiceMonitor) DeepCopyInto(out *SLSServiceMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceMonitor.
func (in *SLSServiceMonitor) DeepCopy() *SLSServiceMonitor {
	if in == nil {
		return nil
	}
	out := new(SLSServiceMonitor)
	in.DeepCopyInto(out)
	return out
}

func (in *SLSServiceMonitor) Convert2ServiceMonitor() *ServiceMonitor {
	p := new(ServiceMonitor)
	p.TypeMeta = in.TypeMeta
	p.ObjectMeta = in.ObjectMeta
	p.Spec = in.Spec
	return p
}

// ServiceMonitorList is a list of ServiceMonitors.
// +k8s:openapi-gen=true
type SLSServiceMonitorList struct {
	metav1.TypeMeta `json:",inline"`
	// Standard list metadata
	// More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#metadata
	metav1.ListMeta `json:"metadata,omitempty"`
	// List of ServiceMonitors
	Items []*SLSServiceMonitor `json:"items"`
}

// DeepCopyObject implements the runtime.Object interface.
func (l *SLSServiceMonitorList) DeepCopyObject() runtime.Object {
	return l.DeepCopy()
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SLSServiceMonitorList) DeepCopyInto(out *SLSServiceMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]*SLSServiceMonitor, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SLSServiceMonitor)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceMonitorList.
func (in *SLSServiceMonitorList) DeepCopy() *SLSServiceMonitorList {
	if in == nil {
		return nil
	}
	out := new(SLSServiceMonitorList)
	in.DeepCopyInto(out)
	return out
}
